;; Add Emacs package archive: MELPA 
(require 'package) ;; You might already have this line
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize) ;; You might already have this line

;; Install Emacs Markdown Mode
;; markdown-mode installed using brew, so (add-to-list 'load-path not needed.

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.

(autoload 'markdown-mode "markdown-mode"
  "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

;; Install Neotree
(add-to-list 'load-path "~/.emacs.d/elpa/neotree")
(require 'neotree)
(global-set-key [f8] 'neotree-toggle)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 ;;'(custom-enabled-themes (quote (wombat)))
 '(custom-safe-themes
   (quote
    ("9d91458c4ad7c74cf946bd97ad085c0f6a40c370ac0a1cbeb2e3879f15b40553" default)))
 '(fci-rule-color "#383838")
 '(nrepl-message-colors
   (quote
    ("#CC9393" "#DFAF8F" "#F0DFAF" "#7F9F7F" "#BFEBBF" "#93E0E3" "#94BFF3" "#DC8CC3")))
 '(org-startup-truncated nil)
 '(package-selected-packages
   (quote
    (swift-mode magit exec-path-from-shell elpy zenburn-theme smooth-scrolling smooth-scroll company-irony irony irony-eldoc ecb)))
 '(pdf-view-midnight-colors (quote ("#DCDCCC" . "#383838")))
 '(vc-annotate-background "#2B2B2B")
 '(vc-annotate-color-map
   (quote
    ((20 . "#BC8383")
     (40 . "#CC9393")
     (60 . "#DFAF8F")
     (80 . "#D0BF8F")
     (100 . "#E0CF9F")
     (120 . "#F0DFAF")
     (140 . "#5F7F5F")
     (160 . "#7F9F7F")
     (180 . "#8FB28F")
     (200 . "#9FC59F")
     (220 . "#AFD8AF")
     (240 . "#BFEBBF")
     (260 . "#93E0E3")
     (280 . "#6CA0A3")
     (300 . "#7CB8BB")
     (320 . "#8CD0D3")
     (340 . "#94BFF3")
     (360 . "#DC8CC3"))))
     '(vc-annotate-very-old-color "#DC8CC3"))

;; Emacs theme settings for running in GUI or terminal
(if window-system
    (load-theme 'wombat)
  ;;(setq-default set-background-color "black")
  (add-to-list 'default-frame-alist '(background-color . "black")))

;; (custom-set-faces
;;  ;; custom-set-faces was added by Custom.
;;  ;; If you edit it by hand, you could mess it up, so be careful.
;;  ;; Your init file should contain only one such instance.
;;  ;; If there is more than one, they won't work right.
;;  '(default ((t (:inherit nil :stipple nil :background "black" :foreground "unspecified-fg" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 1 :width normal :foundry "default" :family "default"))))))

;; Enable Emacs mouse support in iTerm2 (self-added)
(unless window-system
  (require 'mouse)
  (xterm-mouse-mode t)
  (global-set-key [mouse-4] (lambda ()
			      (interactive)
			      (scroll-down 1)))
  (global-set-key [mouse-5] (lambda ()
			      (interactive)
			      (scroll-up 1)))
  (defun track-mouse (e))
  (setq mouse-sel-mode t)
)

;; Install irony-mode on MELPA, for C/C++ auto-completion
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

;; replace the `completion-at-point' and `complete-symbol' bindings in
;; irony-mode's buffers by irony-mode's function
(defun my-irony-mode-hook ()
  (define-key irony-mode-map [remap completion-at-point]
    'irony-completion-at-point-async)
  (define-key irony-mode-map [remap complete-symbol]
    'irony-completion-at-point-async))
(add-hook 'irony-mode-hook 'my-irony-mode-hook)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)

;; company-irony (self-added)
(eval-after-load 'company
  '(add-to-list 'company-backends 'company-irony))
;; enable company-mode (self-added)
(add-hook 'after-init-hook 'global-company-mode)

;; set tab width in fundamental-mode and c-mode (self-added)
(setq default-tab-width 8)
(setq tab-width 8)
(setq-default c-basic-offset 4)

;; smooth scrolling by package "smooth-scrolling" (self-added)
(require 'smooth-scrolling)
(setq smooth-scroll-margin 5)
(smooth-scrolling-mode 1)

;; tuareg-mode for OCaml (self-added)
(load "/Users/Max/.opam/system/share/emacs/site-lisp/tuareg-site-file")

;; Emacs window-mode customizations (self-added)
;;(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)
(add-to-list 'default-frame-alist
             '(vertical-scroll-bars . nil))
;;(linum-mode 1)
(global-linum-mode 1)
(column-number-mode t)
(show-paren-mode 1)

;;(set-face-attribute 'default nil :height 140)
(add-to-list 'default-frame-alist
             '(font . "Monaco-12"))
(setq-default line-spacing 0.1)

;; elpy (self-added)
(with-eval-after-load 'python
  (setq elpy-rpc-backend "jedi")
  (elpy-enable))

;; set Emacs environment variables to be the same in shell (self-added)
(exec-path-from-shell-initialize)

;; custom key bindings (self-added)
(global-set-key (kbd "s-[") (lambda () (interactive) (other-window -1)))
(global-set-key (kbd "s-]") (lambda () (interactive) (other-window 1)))

;; ido-mode (self-added)
(require 'ido)
(ido-mode t)

;; Emacs org-mode for LaTeX syntax highlighting (self-added)
(eval-after-load 'org
  '(setf org-highlight-latex-and-related '(latex)))
;;(add-hook 'org-mode-hook (lambda () (toggle-truncate-lines 1)))
